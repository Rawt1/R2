openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products
paths:
  /products:
    get:
      summary: Get list of products
      description: Returns a list of ProductShort objects
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductShort'
    post:
      summary: Create a new product
      description: Add a new product to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductShort'
      responses:
        '201':
          description: Product successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductShort'
        '400':
          description: Invalid input

  /products/{productId}:
    get:
      summary: Get a specific product
      description: Returns a detailed product object
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to fetch
          schema:
            type: string
      responses:
        '200':
          description: Detailed product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductShort'
        '400':
          description: Invalid ID supplied

    put:
      summary: Update an existing product
      description: Modify details of a product in the system
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductShort'
      responses:
        '200':
          description: Product successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductShort'
        '400':
          description: Invalid input

    delete:
      summary: Delete a specific product
      description: Remove a product from the system
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to delete
          schema:
            type: string
      responses:
        '200':
          description: Product successfully deleted
        '400':
          description: Invalid ID supplied
  /images:
    post:
      summary: Upload an image
      description: Upload an image to the system
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Image successfully uploaded
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
  /images/{imageId}:
    get:
      summary: get an image
      description: get image with given id
      parameters:
        - name: imageId
          in: path
          required: true
          description: ID of the image to fetch
          schema:
              type: string
      responses:
        '200':
          description: Image successfully fetched
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: Image not found


components:
  schemas:
    ProductShort:
      type: object
      properties:
        id:
          type: string
          description: The id of the product
        title:
          type: string
          description: The title of the product
        shortDescription:
          type: string
          description: A short description of the product
        price:
          type: number
          format: float
          description: The price of the product
        imageId:
          type: string
          description: id of the photo